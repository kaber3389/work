<?php


namespace app\models;


use yii\behaviors\TimestampBehavior;

/**
 * Class Product
 * @package app\models
 *
 * @property integer $id
 * @property string $title
 * @property string $description
 * @property float $price
 * @property integer $main_image_id
 * @property integer $is_active
 * @property integer $in_main_page
 * @property string $slug
 * @property integer $created_at
 * @property integer $updated_at
 *
 * @property Image $mainImage
 */

class Product extends \yii\db\ActiveRecord
{
    const MAIN_PAGE_PRODUCTS_LIMIT = 4;

    public $image;
    public $document;

    public static function tableName()
    {
        return 'product';
    }

    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            TimestampBehavior::className(),
        ];
    }

    /**
     * @return array the validation rules.
     */
    public function rules()
    {
        return [
            [['slug'], 'unique'],
            [['title', 'slug'], 'required'],
            [['price'], 'number'],
            [['title', 'description', 'slug'], 'string'],
            [['is_active', 'main_image_id', 'in_main_page', 'created_at', 'updated_at'], 'integer'],
        ];
    }

    public function attributeLabels()
    {
        return [
            'title' => 'Название',
            'main_image_id' => 'Главное изображение',
            'description' => 'Описание',
            'document' => 'Документ',
            'price' => 'Цена',
            'is_active' => 'Активный',
            'in_main_page' => 'Выводить на главной',
            'created_at' => 'Создан',
            'updated_at' => 'Обновлен',
        ];
    }

    public function getMainImage()
    {
        return $this->hasOne(Image::class, ['id' => 'main_image_id']);
    }

    public function beforeSave($insert)
    {
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    public static function findInMainPage()
    {
        return self::find()
            ->where([
                'is_active' => 1, 'in_main_page' => 1
            ])
            ->limit(self::MAIN_PAGE_PRODUCTS_LIMIT)
            ->all();
    }
}